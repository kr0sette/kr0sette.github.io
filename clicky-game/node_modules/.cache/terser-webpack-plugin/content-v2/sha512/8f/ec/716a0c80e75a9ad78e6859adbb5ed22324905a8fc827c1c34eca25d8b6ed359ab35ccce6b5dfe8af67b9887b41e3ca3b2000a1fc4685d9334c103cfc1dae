{"map":"{\"version\":3,\"sources\":[\"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/clicky-game/src/components/Wrapper/Wrapper.js\",\"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/clicky-game/src/components/NavBar/NavBar.js\",\"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/clicky-game/src/components/Jumbotron/Jumbotron.js\",\"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/clicky-game/src/components/Card/Card.js\",\"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/clicky-game/src/App.js\",\"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/clicky-game/src/serviceWorker.js\",\"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/clicky-game/src/index.js\"],\"names\":[\"Wrapper\",\"props\",\"react_default\",\"a\",\"createElement\",\"className\",\"children\",\"NavBar\",\"id\",\"status\",\"score\",\"gamesWon\",\"Jumbotron\",\"Card\",\"value\",\"onClick\",\"handleClick\",\"alt\",\"name\",\"src\",\"image\",\"App\",\"state\",\"char\",\"clicked\",\"_this\",\"indexOf\",\"newScore\",\"newGamesWon\",\"setState\",\"handleReset\",\"concat\",\"handleShuffle\",\"shuffled\",\"array\",\"i\",\"length\",\"j\",\"Math\",\"floor\",\"random\",\"_ref\",\"shuffleCards\",\"_this2\",\"this\",\"components_Wrapper_Wrapper\",\"components_NavBar_NavBar\",\"components_Jumbotron_Jumbotron\",\"map\",\"components_Card_Card\",\"key\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from \\\"react\\\";\\n\\nconst Wrapper = props => <div className=\\\"wrapper\\\">{props.children}</div>;\\n\\nexport default Wrapper;\\n\",\"import React from \\\"react\\\";\\nimport \\\"./NavBar.css\\\";\\n\\nconst NavBar = props => (\\n\\n    <nav className=\\\"navbar navbar-expand navbar-light bg-light\\\">\\n        <div className=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n            <ul className=\\\"navbar-nav\\\">\\n                <li className=\\\"nav-item active\\\">\\n                    <p className=\\\"top\\\">Clicky Game</p>\\n                </li>\\n                <li className=\\\"nav-item\\\">\\n                    <p className=\\\"top\\\">{props.status}</p>\\n                </li>\\n                <li className=\\\"nav-item\\\">\\n                    <p className=\\\"top\\\"\\n                    >Score: {props.score} | Games Won: {props.gamesWon}\\n                    </p>\\n                </li>\\n            </ul>\\n        </div>\\n    </nav>\\n\\n);\\n\\n\\nexport default NavBar;\",\"import React from 'react';\\nimport \\\"./Jumbotron.css\\\"\\n\\nconst Jumbotron = () => (\\n    <div className=\\\"jumbotron jumbotron-fluid\\\">\\n        <div className=\\\"container\\\">\\n            <h1 className=\\\"display-4\\\">Clicky Game</h1>\\n            <h3>Parks &amp; Recreation Edition</h3>\\n            <p className=\\\"lead\\\">Click on each character once to win the game.  If you click on a character twice, you die! </p>\\n        </div>\\n    </div>\\n);\\n\\nexport default Jumbotron;\",\"import React from \\\"react\\\";\\nimport \\\"./Card.css\\\";\\n\\n\\nconst Card = props => (\\n    <div \\n        className=\\\"card\\\" \\n        value={props.id}\\n        onClick = {() => props.handleClick(props.id)}\\n    >\\n        <img alt={props.name} src={props.image}  />\\n    </div>\\n);\\n\\nexport default Card;\",\"import React, { Component } from 'react';\\nimport Wrapper from './components/Wrapper';\\nimport NavBar from './components/NavBar';\\nimport Jumbotron from './components/Jumbotron';\\nimport Card from './components/Card';\\nimport char from \\\"./characters.json\\\";\\n\\n\\nclass App extends Component {\\n//Set State\\n  state = {\\n    char,\\n    score: 0,\\n    gamesWon: 0,\\n    clicked: [],\\n    status: \\\"\\\"\\n  };\\n  \\n\\n  //Function that dictates what happens when a card is clicked\\n  handleClick = (id) => {\\n    //Check to see if the clicked image is already in the clicked array\\n    //If it is not clicked yet\\n    if (this.state.clicked.indexOf(id) === -1){\\n      //Increase score by 1\\n      let newScore = this.state.score + 1;\\n      //Check to see if the score is equal to 12\\n      //If score = 12\\n      if (newScore === 12) {\\n        //send \\\"You Win\\\" message\\n        // alert(\\\"Congrats, you win!\\\")\\n        //increase games won score\\n        let newGamesWon = this.state.gamesWon + 1;\\n        this.setState({\\n          gamesWon: newGamesWon,\\n          status: \\\"Congrats, you WIN!\\\"\\n        });\\n        //reset game\\n        this.handleReset();\\n      }\\n      //If score <> 12\\n      else{\\n        //send \\\"You Guess Correctly\\\" message\\n        // alert(\\\"You guessed correctly!\\\")\\n        this.setState({\\n          //increase state.score\\n          score: newScore,\\n          clicked: this.state.clicked.concat(id),\\n          status: \\\"You guess correctly!\\\"\\n        //add selected card to Clicked array\\n        });\\n        //shuffle cards\\n        this.handleShuffle();\\n      }\\n    }\\n    //If it is clicked already\\n    else {\\n      //send \\\"You Lose\\\" Message\\n      // alert(\\\"You guessed incorrectly!  Start again.\\\");\\n      this.setState({\\n       status: \\\"You guessed incorrectly!  Play again.\\\"\\n      });\\n      //reset game\\n      this.handleReset();\\n    }\\n  };//END handleClick\\n\\n\\n\\n\\n\\n\\n  //Function that handles reseting game\\n  handleReset = () => {\\n    this.setState ({\\n      score: 0,\\n      clicked:[]\\n    });\\n    this.handleShuffle();\\n  };//END handleReset\\n\\n\\n\\n\\n\\n  //Function that shuffles the cards\\n  handleShuffle = () => {\\n\\n    const shuffleCards = array => {\\n      for (let i = array.length - 1; i > 0; i--) {\\n          const j = Math.floor(Math.random() * (i + 1));\\n          [array[i], array[j]] = [array[j], array[i]];\\n      }\\n      return array;\\n    }\\n\\n    let shuffled = shuffleCards(char);\\n    this.setState( {char: shuffled});\\n  };//END handleShuffle\\n\\n\\n\\n\\n\\n//Renders components to page\\n  render() {\\n    return (\\n      <Wrapper>\\n        <NavBar \\n          score = {this.state.score}\\n          gamesWon = {this.state.gamesWon}\\n          status = {this.state.status}\\n        />\\n        <Jumbotron />\\n        <div className=\\\"container game\\\">\\n          <div className=\\\"row\\\">\\n            <div className=\\\"column\\\">\\n              {this.state.char.map (char => (\\n                <Card \\n                  key={char.id}\\n                  id={char.id}\\n                  name={char.name}\\n                  image={char.image}\\n                  handleClick = {this.handleClick}\\n                  />\\n              ))}\\n            </div>\\n          </div>\\n        </div>\\n      </Wrapper>\\n    );\\n  }//END Render\\n\\n\\n}\\n\\n\\n\\nexport default App;\\n\",\"// In production, we register a service worker to serve assets from local cache.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on the \\\"N+1\\\" visit to a page, since previously\\n// cached resources are updated in the background.\\n\\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\\n// This link also includes instructions on opting out of this behavior.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\\n          );\\n        });\\n      } else {\\n        // Is not local host. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the old content will have been purged and\\n              // the fresh content will have been added to the cache.\\n              // It's the perfect time to display a \\\"New content is\\n              // available; please refresh.\\\" message in your web app.\\n              console.log('New content is available; please refresh.');\\n\\n              // Execute callback\\n              if (config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,function(e){e.exports=[{id:1,name:\"Andy Dwyer\",image:\"https://i.imgur.com/MAcojO2.jpg\"},{id:2,name:\"Ann Perkins\",image:\"https://i.imgur.com/0apit6E.jpg\"},{id:3,name:\"April Ludgate\",image:\"https://i.imgur.com/iuBLZaX.jpg\"},{id:4,name:\"Ben Wyatt\",image:\"https://i.imgur.com/geovDsL.jpg\"},{id:5,name:\"Chris Traeger\",image:\"https://i.imgur.com/PQdW0I6.jpg\"},{id:6,name:\"Donna Meagle\",image:\"https://i.imgur.com/INBklDf.jpg\"},{id:7,name:\"Jean Ralphio\",image:\"https://i.imgur.com/UW5i0OG.jpg\"},{id:8,name:\"Jerry Gergich\",image:\"https://i.imgur.com/vf6dacR.jpg\"},{id:9,name:\"Leslie Knope\",image:\"https://i.imgur.com/NEHxHlc.jpg\"},{id:10,name:\"Ron Swanson\",image:\"https://i.imgur.com/uc8sJZ7.jpg\"},{id:11,name:\"Tammy Swanson\",image:\"https://i.imgur.com/Tafm5fY.jpg\"},{id:12,name:\"Tom Haverford\",image:\"https://i.imgur.com/xtftNQ3.jpg\"}]},,,,,,,,function(e,a,t){e.exports=t(23)},,,,,function(e,a,t){},,function(e,a,t){},,function(e,a,t){},,function(e,a,t){},,function(e,a,t){\"use strict\";t.r(a);var n=t(0),i=t.n(n),c=t(4),r=t.n(c),s=(t(15),t(5)),m=t(6),o=t(8),l=t(7),u=t(9),d=function(e){return i.a.createElement(\"div\",{className:\"wrapper\"},e.children)},g=(t(17),function(e){return i.a.createElement(\"nav\",{className:\"navbar navbar-expand navbar-light bg-light\"},i.a.createElement(\"div\",{className:\"collapse navbar-collapse\",id:\"navbarNav\"},i.a.createElement(\"ul\",{className:\"navbar-nav\"},i.a.createElement(\"li\",{className:\"nav-item active\"},i.a.createElement(\"p\",{className:\"top\"},\"Clicky Game\")),i.a.createElement(\"li\",{className:\"nav-item\"},i.a.createElement(\"p\",{className:\"top\"},e.status)),i.a.createElement(\"li\",{className:\"nav-item\"},i.a.createElement(\"p\",{className:\"top\"},\"Score: \",e.score,\" | Games Won: \",e.gamesWon)))))}),h=(t(19),function(){return i.a.createElement(\"div\",{className:\"jumbotron jumbotron-fluid\"},i.a.createElement(\"div\",{className:\"container\"},i.a.createElement(\"h1\",{className:\"display-4\"},\"Clicky Game\"),i.a.createElement(\"h3\",null,\"Parks & Recreation Edition\"),i.a.createElement(\"p\",{className:\"lead\"},\"Click on each character once to win the game.  If you click on a character twice, you die! \")))}),p=(t(21),function(e){return i.a.createElement(\"div\",{className:\"card\",value:e.id,onClick:function(){return e.handleClick(e.id)}},i.a.createElement(\"img\",{alt:e.name,src:e.image}))}),f=t(2),v=function(e){function a(){var e,t;Object(s.a)(this,a);for(var n=arguments.length,i=new Array(n),c=0;c<n;c++)i[c]=arguments[c];return(t=Object(o.a)(this,(e=Object(l.a)(a)).call.apply(e,[this].concat(i)))).state={char:f,score:0,gamesWon:0,clicked:[],status:\"\"},t.handleClick=function(e){if(-1===t.state.clicked.indexOf(e)){var a=t.state.score+1;if(12===a){var n=t.state.gamesWon+1;t.setState({gamesWon:n,status:\"Congrats, you WIN!\"}),t.handleReset()}else t.setState({score:a,clicked:t.state.clicked.concat(e),status:\"You guess correctly!\"}),t.handleShuffle()}else t.setState({status:\"You guessed incorrectly!  Play again.\"}),t.handleReset()},t.handleReset=function(){t.setState({score:0,clicked:[]}),t.handleShuffle()},t.handleShuffle=function(){var e=function(e){for(var a=e.length-1;a>0;a--){var t=Math.floor(Math.random()*(a+1)),n=[e[t],e[a]];e[a]=n[0],e[t]=n[1]}return e}(f);t.setState({char:e})},t}return Object(u.a)(a,e),Object(m.a)(a,[{key:\"render\",value:function(){var e=this;return i.a.createElement(d,null,i.a.createElement(g,{score:this.state.score,gamesWon:this.state.gamesWon,status:this.state.status}),i.a.createElement(h,null),i.a.createElement(\"div\",{className:\"container game\"},i.a.createElement(\"div\",{className:\"row\"},i.a.createElement(\"div\",{className:\"column\"},this.state.char.map(function(a){return i.a.createElement(p,{key:a.id,id:a.id,name:a.name,image:a.image,handleClick:e.handleClick})})))))}}]),a}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(i.a.createElement(v,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}],[[10,2,1]]]);","extractedComments":[]}